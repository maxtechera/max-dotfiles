# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # Auto-assign commonly used apps to their designated workspaces
    'workspace 2',  # Start in main coding workspace (theanswer project)
    # Gather any unassigned windows to workspace 1 on startup
    'exec-and-forget aerospace list-windows --all --format "%{window-id}" | head -20 | xargs -I {} aerospace move-node-to-workspace --window-id {} 1 2>/dev/null || true',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Mouse follows focus when any window receives focus (improved productivity)
on-focus-changed = ['move-mouse window-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Small gaps for better visual clarity while maintaining clean split-screen experience
[gaps]
    inner.horizontal = 0
    inner.vertical =   0
    outer.left =       0
    outer.bottom =     0
    outer.top =        0
    outer.right =      0

# DEFAULT WORKSPACE for new windows that don't match any rules
# This catches any unassigned windows and puts them in workspace 1
[[on-window-detected]]
if.app-id = '*'  # Wildcard to catch all apps
run = 'move-node-to-workspace 1'

# Workspace-to-app assignments for single-instance apps only
# These will override the default rule above for specific apps

# Tools workspace
[[on-window-detected]]
if.app-id = 'com.postmanlabs.mac'  # Postman
run = 'move-node-to-workspace P'

# Design workspace
[[on-window-detected]]
if.app-id = 'com.figma.Desktop'  # Figma
run = 'move-node-to-workspace F'

# Communication apps
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'  # Slack
run = 'move-node-to-workspace S'

[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'  # WhatsApp
run = 'move-node-to-workspace M'

# Media apps
[[on-window-detected]]
if.app-id = 'com.spotify.client'  # Spotify
run = 'move-node-to-workspace O'

# Phone mirroring
[[on-window-detected]]
if.app-id = 'com.apple.iphonemirroring'  # iPhone Mirroring
run = 'move-node-to-workspace I'

# Video conferencing
[[on-window-detected]]
if.app-id = 'us.zoom.xos'  # Zoom
run = 'move-node-to-workspace Z'

# Chrome profiles - these rules must come BEFORE the general Chrome rule
# Adjust the profile names to match your actual Chrome profile names
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'Profile 1|Person 1'  # First profile
run = 'move-node-to-workspace C'

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'Profile 2|Person 2'  # Second profile
run = 'move-node-to-workspace D'

[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.window-title-regex-substring = 'Work'  # Work profile
run = 'move-node-to-workspace W'

# General Chrome windows (without specific profile in title)
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = 'move-node-to-workspace B'  # Default Chrome workspace


# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # Quick app launcher shortcuts
    alt-enter = '''exec-and-forget osascript -e '
    tell application "Terminal"
        do script
        activate
    end tell'
    '''
    
    # Essential window management shortcuts
    alt-f = 'fullscreen'                        # Standard fullscreen toggle
    alt-shift-space = 'layout floating tiling'  # Toggle floating/tiling
    cmd-alt-r = 'flatten-workspace-tree'        # Quick layout reset
    
    # RESCUE SHORTCUT: Gather all unassigned windows to workspace 1
    cmd-alt-1 = '''exec-and-forget sh -c '
    aerospace list-windows --all --format "%{window-id}:%{workspace}" | 
    grep ":$" | 
    cut -d: -f1 | 
    head -20 | 
    xargs -I {} aerospace move-node-to-workspace --window-id {} 1 2>/dev/null || true
    ' '''
    
    # Quick workspace switching (simplified - removed duplicates)
    ctrl-shift-f = 'workspace F'  # Figma workspace
    ctrl-shift-s = 'workspace S'  # Slack
    ctrl-shift-m = 'workspace M'  # WhatsApp
    ctrl-shift-i = 'workspace I'  # iPhone Mirroring

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-h = 'focus left'
    alt-j = 'focus down'
    alt-k = 'focus up'
    alt-l = 'focus right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-h = 'move left'
    alt-shift-j = 'move down'
    alt-shift-k = 'move up'
    alt-shift-l = 'move right'

    # Simplified smart resizing (more intuitive than pixel-based)
    alt-minus = 'resize smart -50'
    alt-equal = 'resize smart +50'
    
    # Advanced resize controls for fine-tuning
    ctrl-shift-equal = 'resize smart +100'  # Make current window larger
    ctrl-shift-minus = 'resize smart -100'  # Make current window smaller

    # Perfect layout controls
    ctrl-shift-5 = 'flatten-workspace-tree'  # Reset to perfect 50/50 split
    ctrl-shift-7 = 'resize smart +150'       # Make current window ~70% 
    ctrl-shift-3 = 'resize smart -150'       # Make current window ~30%
    
    # Layout controls
    ctrl-shift-t = 'layout tiles horizontal vertical'      # Force tiles layout
    ctrl-shift-a = 'layout accordion horizontal vertical'  # Accordion for focus mode

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-1 = 'workspace 1'
    alt-2 = 'workspace 2'
    alt-3 = 'workspace 3'
    alt-4 = 'workspace 4'
    alt-5 = 'workspace 5'
    alt-6 = 'workspace 6'
    alt-7 = 'workspace 7'
    alt-8 = 'workspace 8'
    alt-9 = 'workspace 9'
    alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
    alt-b = 'workspace B'
    alt-c = 'workspace C'
    alt-d = 'workspace D'
    alt-e = 'workspace E'
    #alt-F = 'workspace F'
    alt-g = 'workspace G'
    alt-i = 'workspace I'
    alt-m = 'workspace M'
    alt-n = 'workspace N'
    alt-p = 'workspace P'
    alt-q = 'workspace Q'
    alt-r = 'workspace R'
    alt-s = 'workspace S'
    alt-t = 'workspace T'
    alt-u = 'workspace U'
    alt-v = 'workspace V'
    alt-w = 'workspace W'
    alt-x = 'workspace X'
    alt-y = 'workspace Y'
    alt-z = 'workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-1 = 'move-node-to-workspace 1'
    alt-shift-2 = 'move-node-to-workspace 2'
    alt-shift-3 = 'move-node-to-workspace 3'
    alt-shift-4 = 'move-node-to-workspace 4'
    alt-shift-5 = 'move-node-to-workspace 5'
    alt-shift-6 = 'move-node-to-workspace 6'
    alt-shift-7 = 'move-node-to-workspace 7'
    alt-shift-8 = 'move-node-to-workspace 8'
    alt-shift-9 = 'move-node-to-workspace 9'
    alt-shift-a = 'move-node-to-workspace A'
    alt-shift-b = 'move-node-to-workspace B'
    alt-shift-c = 'move-node-to-workspace C'
    alt-shift-d = 'move-node-to-workspace D'
    alt-shift-e = 'move-node-to-workspace E'
    #alt-shift-f = 'move-node-to-workspace F'
    alt-shift-g = 'move-node-to-workspace G'
    alt-shift-i = 'move-node-to-workspace I'
    alt-shift-m = 'move-node-to-workspace M'
    alt-shift-n = 'move-node-to-workspace N'
    alt-shift-o = 'move-node-to-workspace O'
    alt-shift-p = 'move-node-to-workspace P'
    alt-shift-q = 'move-node-to-workspace Q'
    alt-shift-r = 'move-node-to-workspace R'
    alt-shift-s = 'move-node-to-workspace S'
    alt-shift-t = 'move-node-to-workspace T'
    alt-shift-u = 'move-node-to-workspace U'
    alt-shift-v = 'move-node-to-workspace V'
    alt-shift-w = 'move-node-to-workspace W'
    alt-shift-x = 'move-node-to-workspace X'
    alt-shift-y = 'move-node-to-workspace Y'
    alt-shift-z = 'move-node-to-workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # Advanced window joining (container management)
    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

    # System controls in service mode
    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']
    
    # Layout management
    t = ['layout tiles horizontal vertical', 'mode main']
    a = ['layout accordion horizontal vertical', 'mode main']
    
    # RESCUE COMMAND: Gather all scattered windows to workspace 1
    1 = ['exec-and-forget sh -c "aerospace list-windows --all --format \\"%{window-id}:%{workspace}\\" | grep \\":\$\\" | cut -d: -f1 | head -20 | xargs -I {} aerospace move-node-to-workspace --window-id {} 1 2>/dev/null || true"', 'mode main']

# Multi-monitor setup: main workspaces on external, communication/media on laptop
[workspace-to-monitor-force-assignment]
# Main workspaces - prefer external monitor
1 = ['secondary', 'main']     # Personal/Tools workspace
2 = ['secondary', 'main']     # theanswer project
3 = ['secondary', 'main']     # LastRev project
4 = ['secondary', 'main']     # General workspace
5 = ['secondary', 'main']     # General workspace
6 = ['secondary', 'main']     # General workspace
7 = ['secondary', 'main']     # General workspace
8 = ['secondary', 'main']     # General workspace
9 = ['secondary', 'main']     # General workspace
F = ['secondary', 'main']     # Figma
P = ['secondary', 'main']     # Postman

# Communication/Media workspaces - prefer laptop monitor
S = ['main', 'secondary']     # Slack
M = ['main', 'secondary']     # WhatsApp
O = ['main', 'secondary']     # Spotify (media)
I = ['main', 'secondary']     # iPhone Mirroring
